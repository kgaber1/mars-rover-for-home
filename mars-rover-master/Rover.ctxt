#BlueJ class context
comment0.target=Rover
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Rover\ here.\r\n\r\n\ @author\ (kEVIN\ GAber)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=name
comment1.target=Rover(java.lang.String)
comment1.text=\ the\ function\ creates\ a\ rover\r\n\ @param\ name\ \ name\ of\ the\ rover\ being\ created\r\n
comment10.params=amps
comment10.target=void\ charge(int)
comment10.text=\ this\ function\ allows\ the\ robot\ to\ charge\ the\ energy\ of\ the\ robot\ to\ 100%\r\n\ amps\ -\ the\ amount\ of\ charge\ given\ to\ the\ rover\ up\ to\ 100%.\r\n
comment11.params=
comment11.target=void\ takePicture()
comment11.text=\ this\ function\ allows\ the\ rover\ to\ take\ a\ selfie\ in\ his\ current\ spot\ and\ the\ direction\ he\ is\ facing.\r\n\ Numpics\ -\ the\ amount\ of\ pictures\ you\ can\ take.\r\n\ maxPics\ -\ the\ maximum\ amount\ of\ pictures\ the\ rover\ can\ hold.\r\n\ getDirectionName()\ -\ \ prints\ out\ the\ direction\ the\ rover\ is\ facing.\r\n
comment12.params=
comment12.target=void\ transmitPictures()
comment12.text=\ this\ function\ allows\ the\ rover\ to\ transmit\ his\ pictures\ back\ to\ earth.\r\n\ transmitPictures\ -\ resets\ the\ numPics\ to\ 0\ and\ send\ the\ photos\ to\ earth.\r\n
comment13.params=other
comment13.target=void\ kill(Rover)
comment13.text=\ this\ function\ removes\ the\ other\ rover\ and\ makes\ the\ robot\ dead.\r\n\ isAlive\ -\ is\ alive\ is\ the\ condition\ of\ the\ rover\ if\ he\ is\ alive\ or\ not\ \r\n
comment14.params=other
comment14.target=void\ attack(Rover)
comment14.text=\ this\ function\ allows\ rovers\ to\ fight\ other\ robots\ while\ spending\ energy\ to\ do\ so,\ the\ initial\ rover\ will\ deal\ a\ random\ damage\ value\ to\ the\ other\ rover\ \r\n\ \ attack\ -\ allows\ the\ rover\ to\ hit\ the\ other\ rover\ for\ -10\ and\ diminishes\ it\ from\ the\ other\ rovers\ health\ at\ the\ cost\ of\ energy.\r\n
comment15.params=
comment15.target=void\ checkHealth()
comment15.text=\ this\ function\ allows\ the\ rover\ to\ check\ if\ the\ rover\ has\ died\r\n\ isAlive\ -\ does\ not\ let\ the\ rover\ do\ any\ more\ commands\ because\ it\ is\ not\ alive\r\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\ this\ allows\ the\ rovers\ stats\ to\ be\ displayed\ on\ the\ console.\r\n
comment2.params=name\ x\ y\ dir
comment2.target=Rover(java.lang.String,\ int,\ int,\ int)
comment2.text=\ the\ function\ creates\ a\ rover\r\n\ @param\ name\ \ name\ of\ the\ rover\ being\ created\r\n
comment3.params=rotation
comment3.target=void\ rotate(int)
comment3.text=\ the\ program\ checks\ to\ see\ if\ the\ rover\ is\ alive\ and\ had\ energy\ and\ then\ turns\ the\ rover\ in\ whichever\ direction\ is\ inputted.\ \r\n\ @param\ \ rotation\ dir\ tells\ the\ direction\ of\ the\ rover\ \r\n\ @param\ \ rotation\ gives\ the\ direction\ value\ of\ the\ rover\ to\ turn\ int\ direction.\r\n
comment4.params=amount
comment4.target=void\ spendEnergy(int)
comment4.text=\ this\ function\ allows\ the\ rover\ to\ consume\ energy\ doing\ tasks.\r\n\ @param\ \ energy\ \ allows\ the\ rover\ to\ do\ a\ certain\ amount\ of\ commands\ before\ recharging\r\n\ @param\ \ hasPower\ \ gives\ the\ rover\ the\ condition\ if\ he\ has\ energy\ he\ can\ do\ tasks\r\n\ @param\ spendEnergy\ \ consumes\ energy\ to\ do\ tasks\r\n
comment5.params=
comment5.target=java.lang.String\ getDirectionName()
comment5.text=\ this\ allows\ the\ program\ to\ output\ a\ cardinal\ direction\ onto\ the\ screen\ given\ the\ input\ the\ computer\ received\ and\ calculated\ in\ the\ rotation\ function.\r\n\ directionArray\ are\ the\ cardinal\ directions\ allowed\ in\ the\ rover.\r\n
comment6.params=moveDistance
comment6.target=void\ move(int)
comment6.text=\ these\ are\ the\ formulas\ to\ move\ in\ the\ 8\ cardinal\ directions\ 0\ being\ north\ 7\ being\ north\ east\r\n\ moveDistance\ is\ the\ distance\ inputed\ added\ to\ the\ corresponding\ direction\ to\ give\ a\ position\ of\ x\ and\ y.\r\n
comment7.params=x\ y
comment7.target=void\ moveTo(int,\ int)
comment7.text=\ this\ function\ takes\ an\ integer\ and\ rotates\ the\ rover\ to\ move\ to\ the\ given\ point\ as\ efficiently\ as\ possible\r\n\ moveTo\ is\ the\ function\ which\ takes\ the\ x\ and\ y\ coordinate\ and\ moves\ the\ rover\ as\ efficiently\ as\ possible\ to\ the\ desired\ x\ and\ y\ value\ (even\ if\ it\ means\ driving\ backwards).\r\n
comment8.params=homeX\ homeY
comment8.target=void\ goHome(int,\ int)
comment8.text=\ this\ function\ initiates\ the\ rover\ to\ take\ the\ most\ efficient\ way\ back\ home\ using\ the\ moveTo\ function\ above.\r\n\ moveTo\ is\ the\ function\ which\ takes\ the\ x\ and\ y\ coordinate\ and\ moves\ the\ rover\ as\ efficiently\ as\ possible\ to\ the\ desired\ x\ and\ y\ value.\r\n\ goHome\ makes\ the\ rover\ efficiently\ move\ to\ the\ coordinate\ (0,0)\r\n
comment9.params=x\ y
comment9.target=void\ teleport(int,\ int)
comment9.text=\ this\ function\ allows\ the\ robot\ to\ teleport\ anywhere\ as\ long\ as\ it\ had\ energy\ and\ is\ alive.\r\n\ teleport\ this\ function\ takes\ an\ x\ and\ a\ y\ coordinate\ and\ uses\ the\ robots\ energy\ to\ take\ it\ to\ the\ destination.\r\n
numComments=17
